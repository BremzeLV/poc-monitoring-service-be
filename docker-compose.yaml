services:
  postgres:
    image: postgres:17.5-alpine
    ports:
      - ${DATABASE_PORT}:5432
    volumes:
      - boilerplate-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_BROKER_ID=1
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=${KAFKA_CFG_CONTROLLER_QUORUM_VOTERS}
      - KAFKA_CFG_LISTENERS=${KAFKA_CFG_LISTENERS}
      - KAFKA_CFG_ADVERTISED_LISTENERS=${KAFKA_CFG_ADVERTISED_LISTENERS}
      - KAFKA_KRAFT_CLUSTER_ID=${KAFKA_KRAFT_CLUSTER_ID}
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    depends_on:
      - kafka

  device-mock-1:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_PORT=3001
    command: ["npm", "run", "start:device-mock"]
    ports:
      - "3001:3001"

  device-mock-2:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_PORT=3002
    command: ["npm", "run", "start:device-mock"]
    ports:
      - "3002:3002"

  device-mock-3:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - APP_PORT=3003
    command: ["npm", "run", "start:device-mock"]
    ports:
      - "3003:3003"

volumes:
  boilerplate-db:
